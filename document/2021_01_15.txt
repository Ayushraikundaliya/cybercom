Hey! There?
-> Ayush this side ..

**Object Oriented Programming

-> Objects interacting with one another through methods and properties.
-> Used to store data, structure application into modules and keeping code clean.


**Constructor

-> Just like a blueprint which is used to create instances.


Notes**

-> Every js object has a prototype property; which makes inheritance possible in js.
-> The prototype property of an object is where we put methods and properties that we want other objects to inherit.
-> The constructor's prototype property is NOT the prototype of the constructor itself; it's the prototype of ALL instances that are created through it.
-> When a certain method is called, the search starts in the object itself, and if it cannot be found, the search moves on the object's prototype 


**Let's create constructor

function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
}

var myFather = new Person("John", "Doe", 50, "blue");
var myMother = new Person("Sally", "Rally", 48, "green");


**Let's create function outside object 

Person.prototype.calculateAge = 
function() {
	console.log(2020 - this.age);
};

myFather.calculateAge(); -> We can able to access this as we have make a prototype of a function.


**We can change the value of variable also by using "Prototype" Keyword.


**Object vs primitives

var obj1 = {'cat':'meow'};
var obj2 = {'cat':'meow'};

obj1 === obj2; //false

var obj3 = {'car':'black'};
var obj4 = obj3;

obj3 === obj4; //true


**Functions are also object in javascript

-> A function is an instance of Object type.
-> A function behaves like any other object.
-> We can store functions in variable.
-> We can pass a function as an argument to another function.
-> We can return a function from a function.


So, That's all for today.

Thank you.
Spread Learning ^_^